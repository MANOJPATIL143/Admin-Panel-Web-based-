{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrpat\\\\Favorites\\\\Downloads\\\\argon-dashboard-react-master\\\\client\\\\src\\\\views\\\\examples\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, Form, FormGroup, Label, Input, Button, ListGroup, ListGroupItem } from 'reactstrap';\nimport UserHeader from \"components/Headers/UserHeader.js\";\nimport Header from \"components/Headers/Header.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatHistory = _ref => {\n  _s();\n  let {\n    customerId,\n    providerId\n  } = _ref;\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  useEffect(() => {\n    fetchChatHistory();\n  }, [customerId, providerId]);\n  const fetchChatHistory = async () => {\n    try {\n      const res = await axios.get(`http://localhost:5000/api/chats/${customerId}/${providerId}`);\n      setMessages(res.data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const handleSend = async () => {\n    try {\n      await axios.post(`http://localhost:5000/api/chats/${customerId}/${providerId}`, {\n        senderId: customerId,\n        // or providerId depending on who is sending\n        message: newMessage\n      });\n      setNewMessage('');\n      fetchChatHistory();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chat History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(ListGroupItem, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.senderId === customerId ? 'You' : 'Provider', \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), \" \", msg.message]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"message\",\n            children: \"New Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"message\",\n            id: \"message\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: handleSend,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n};\n_s(ChatHistory, \"ppYy//Iy9fHF0/R/fKleZlFUFyc=\");\n_c = ChatHistory;\nexport default ChatHistory;\nvar _c;\n$RefreshReg$(_c, \"ChatHistory\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","Form","FormGroup","Label","Input","Button","ListGroup","ListGroupItem","UserHeader","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatHistory","_ref","_s","customerId","providerId","messages","setMessages","newMessage","setNewMessage","fetchChatHistory","res","get","data","err","console","error","handleSend","post","senderId","message","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","className","for","type","name","id","value","onChange","e","target","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mrpat/Favorites/Downloads/argon-dashboard-react-master/client/src/views/examples/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n  Container,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Button,\n  ListGroup,\n  ListGroupItem,\n} from 'reactstrap';\nimport UserHeader from \"components/Headers/UserHeader.js\";\nimport Header from \"components/Headers/Header.js\";\n\nconst ChatHistory = ({ customerId, providerId }) => {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n\n  useEffect(() => {\n    fetchChatHistory();\n  }, [customerId, providerId]);\n\n  const fetchChatHistory = async () => {\n    try {\n      const res = await axios.get(`http://localhost:5000/api/chats/${customerId}/${providerId}`);\n      setMessages(res.data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleSend = async () => {\n    try {\n      await axios.post(`http://localhost:5000/api/chats/${customerId}/${providerId}`, {\n        senderId: customerId, // or providerId depending on who is sending\n        message: newMessage,\n      });\n      setNewMessage('');\n      fetchChatHistory();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n\n  return (\n    <>\n      <Header />\n      {/* Page content */}\n      <br/>\n      <br/>\n       <Container>\n      <h2>Chat History</h2>\n      <ListGroup>\n        {messages.map((msg, index) => (\n          <ListGroupItem key={index}>\n            <strong>{msg.senderId === customerId ? 'You' : 'Provider'}:</strong> {msg.message}\n          </ListGroupItem>\n        ))}\n      </ListGroup>\n      <Form className=\"mt-3\">\n        <FormGroup>\n          <Label for=\"message\">New Message</Label>\n          <Input\n            type=\"text\"\n            name=\"message\"\n            id=\"message\"\n            value={newMessage}\n            onChange={(e) => setNewMessage(e.target.value)}\n          />\n        </FormGroup>\n        <Button color=\"primary\" onClick={handleSend}>\n          Send\n        </Button>\n      </Form>\n    </Container>\n    </>\n  );\n};\n\nexport default ChatHistory;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}