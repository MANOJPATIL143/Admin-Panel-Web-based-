{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrpat\\\\Favorites\\\\Downloads\\\\argon-dashboard-react-master\\\\client\\\\src\\\\views\\\\examples\\\\Notifications.js\",\n  _s = $RefreshSig$();\n// components/Notifications.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, ListGroup, ListGroupItem, Button, Alert } from 'reactstrap';\nimport Header from \"components/Headers/Header.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Notifications = _ref => {\n  _s();\n  let {\n    userId\n  } = _ref;\n  const [notifications, setNotifications] = useState([]);\n  useEffect(() => {\n    fetchNotifications();\n  }, [userId]);\n  const fetchNotifications = async () => {\n    try {\n      const res = await axios.get(`/api/notifications/${userId}`);\n      setNotifications(res.data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const handleMarkAsRead = async id => {\n    try {\n      await axios.put(`/api/notifications/${id}`);\n      fetchNotifications();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), notifications.length === 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n        color: \"info\",\n        children: \"No notifications available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n        children: notifications.map(notif => /*#__PURE__*/_jsxDEV(ListGroupItem, {\n          className: notif.read ? 'bg-light' : '',\n          children: [notif.message, !notif.read && /*#__PURE__*/_jsxDEV(Button, {\n            color: \"info\",\n            onClick: () => handleMarkAsRead(notif._id),\n            className: \"float-right\",\n            children: \"Mark as Read\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)]\n        }, notif._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(Notifications, \"6gMUc0OfbF4zJu51/S5RmKCczuA=\");\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","ListGroup","ListGroupItem","Button","Alert","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","Notifications","_ref","_s","userId","notifications","setNotifications","fetchNotifications","res","get","data","err","console","error","handleMarkAsRead","id","put","children","fileName","_jsxFileName","lineNumber","columnNumber","length","color","map","notif","className","read","message","onClick","_id","_c","$RefreshReg$"],"sources":["C:/Users/mrpat/Favorites/Downloads/argon-dashboard-react-master/client/src/views/examples/Notifications.js"],"sourcesContent":["// components/Notifications.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Container, ListGroup, ListGroupItem, Button, Alert  } from 'reactstrap';\r\nimport Header from \"components/Headers/Header.js\";\r\n\r\nconst Notifications = ({ userId }) => {\r\n  const [notifications, setNotifications] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchNotifications();\r\n  }, [userId]);\r\n\r\n  const fetchNotifications = async () => {\r\n    try {\r\n      const res = await axios.get(`/api/notifications/${userId}`);\r\n      setNotifications(res.data);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleMarkAsRead = async (id) => {\r\n    try {\r\n      await axios.put(`/api/notifications/${id}`);\r\n      fetchNotifications();\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <Header />\r\n    <br/>\r\n    <br/>\r\n    <Container>\r\n      <h2>Notifications</h2>\r\n      {notifications.length === 0 ? (\r\n        <Alert color=\"info\">No notifications available.</Alert>\r\n      ) : (\r\n        <ListGroup>\r\n          {notifications.map((notif) => (\r\n            <ListGroupItem key={notif._id} className={notif.read ? 'bg-light' : ''}>\r\n              {notif.message}\r\n              {!notif.read && (\r\n                <Button color=\"info\" onClick={() => handleMarkAsRead(notif._id)} className=\"float-right\">\r\n                  Mark as Read\r\n                </Button>\r\n              )}\r\n            </ListGroupItem>\r\n          ))}\r\n        </ListGroup>\r\n      )}\r\n    </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}