{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrpat\\\\Favorites\\\\Downloads\\\\argon-dashboard-react-master\\\\client\\\\src\\\\components\\\\Sidebar\\\\Sidebar.js\",\n  _s = $RefreshSig$();\n/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.4\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2024 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport { useState } from \"react\";\nimport { NavLink as NavLinkRRD, Link } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// reactstrap components\nimport { Button, Card, CardHeader, CardBody, CardTitle, Collapse, DropdownMenu, DropdownItem, UncontrolledDropdown, DropdownToggle, FormGroup, Form, Input, InputGroupAddon, InputGroupText, InputGroup, Media, NavbarBrand, Navbar, NavItem, NavLink, Nav, Progress, Table, Container, Row, Col } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar ps;\nconst Sidebar = props => {\n  _s();\n  const [collapseOpen, setCollapseOpen] = useState();\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = routeName => {\n    return props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  };\n  // toggles collapse between opened and closed (true/false)\n  const toggleCollapse = () => {\n    setCollapseOpen(data => !data);\n  };\n  // closes the collapse\n  const closeCollapse = () => {\n    setCollapseOpen(false);\n  };\n  // creates the links that appear in the left menu / Sidebar\n  const createLinks = routes => {\n    return routes.map((prop, key) => {\n      return /*#__PURE__*/_jsxDEV(NavItem, {\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: prop.layout + prop.path,\n          tag: NavLinkRRD,\n          onClick: closeCollapse,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: prop.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), prop.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  const {\n    bgColor,\n    routes,\n    logo\n  } = props;\n  let navbarBrandProps;\n  if (logo && logo.innerLink) {\n    navbarBrandProps = {\n      to: logo.innerLink,\n      tag: Link\n    };\n  } else if (logo && logo.outterLink) {\n    navbarBrandProps = {\n      href: logo.outterLink,\n      target: \"_blank\"\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(Sidebar, \"qHO257CwkQzjSiWppGIhTpWbp+g=\");\n_c = Sidebar;\nSidebar.defaultProps = {\n  routes: [{}]\n};\nSidebar.propTypes = {\n  // links that will be displayed inside the component\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the image src of the logo\n    imgSrc: PropTypes.string.isRequired,\n    // the alt for the img\n    imgAlt: PropTypes.string.isRequired\n  })\n};\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["useState","NavLink","NavLinkRRD","Link","PropTypes","Button","Card","CardHeader","CardBody","CardTitle","Collapse","DropdownMenu","DropdownItem","UncontrolledDropdown","DropdownToggle","FormGroup","Form","Input","InputGroupAddon","InputGroupText","InputGroup","Media","NavbarBrand","Navbar","NavItem","Nav","Progress","Table","Container","Row","Col","jsxDEV","_jsxDEV","Fragment","_Fragment","ps","Sidebar","props","_s","collapseOpen","setCollapseOpen","activeRoute","routeName","location","pathname","indexOf","toggleCollapse","data","closeCollapse","createLinks","routes","map","prop","key","children","to","layout","path","tag","onClick","className","icon","fileName","_jsxFileName","lineNumber","columnNumber","name","bgColor","logo","navbarBrandProps","innerLink","outterLink","href","target","_c","defaultProps","propTypes","arrayOf","object","shape","string","imgSrc","isRequired","imgAlt","$RefreshReg$"],"sources":["C:/Users/mrpat/Favorites/Downloads/argon-dashboard-react-master/client/src/components/Sidebar/Sidebar.js"],"sourcesContent":["/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.4\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2024 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport { useState } from \"react\";\nimport { NavLink as NavLinkRRD, Link } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Collapse,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Media,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nvar ps;\n\nconst Sidebar = (props) => {\n  const [collapseOpen, setCollapseOpen] = useState();\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = (routeName) => {\n    return props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  };\n  // toggles collapse between opened and closed (true/false)\n  const toggleCollapse = () => {\n    setCollapseOpen((data) => !data);\n  };\n  // closes the collapse\n  const closeCollapse = () => {\n    setCollapseOpen(false);\n  };\n  // creates the links that appear in the left menu / Sidebar\n  const createLinks = (routes) => {\n    return routes.map((prop, key) => {\n      return (\n        <NavItem key={key}>\n          <NavLink\n            to={prop.layout + prop.path}\n            tag={NavLinkRRD}\n            onClick={closeCollapse}\n          >\n            <i className={prop.icon} />\n            {prop.name}\n          </NavLink>\n        </NavItem>\n      );\n    });\n  };\n\n  const { bgColor, routes, logo } = props;\n  let navbarBrandProps;\n  if (logo && logo.innerLink) {\n    navbarBrandProps = {\n      to: logo.innerLink,\n      tag: Link,\n    };\n  } else if (logo && logo.outterLink) {\n    navbarBrandProps = {\n      href: logo.outterLink,\n      target: \"_blank\",\n    };\n  }\n\n  return (\n   \n    <>\n    </>\n  );\n};\n\nSidebar.defaultProps = {\n  routes: [{}],\n};\n\nSidebar.propTypes = {\n  // links that will be displayed inside the component\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the image src of the logo\n    imgSrc: PropTypes.string.isRequired,\n    // the alt for the img\n    imgAlt: PropTypes.string.isRequired,\n  }),\n};\n\nexport default Sidebar;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,OAAO,IAAIC,UAAU,EAAEC,IAAI,QAAQ,kBAAkB;AAC9D;AACA,SAASC,SAAS,QAAQ,YAAY;;AAEtC;AACA,SACEC,MAAM,EACNC,IAAI,EACJC,UAAU,EACVC,QAAQ,EACRC,SAAS,EACTC,QAAQ,EACRC,YAAY,EACZC,YAAY,EACZC,oBAAoB,EACpBC,cAAc,EACdC,SAAS,EACTC,IAAI,EACJC,KAAK,EACLC,eAAe,EACfC,cAAc,EACdC,UAAU,EACVC,KAAK,EACLC,WAAW,EACXC,MAAM,EACNC,OAAO,EACPvB,OAAO,EACPwB,GAAG,EACHC,QAAQ,EACRC,KAAK,EACLC,SAAS,EACTC,GAAG,EACHC,GAAG,QACE,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpB,IAAIC,EAAE;AAEN,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACzB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGxC,QAAQ,CAAC,CAAC;EAClD;EACA,MAAMyC,WAAW,GAAIC,SAAS,IAAK;IACjC,OAAOL,KAAK,CAACM,QAAQ,CAACC,QAAQ,CAACC,OAAO,CAACH,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,GAAG,EAAE;EACxE,CAAC;EACD;EACA,MAAMI,cAAc,GAAGA,CAAA,KAAM;IAC3BN,eAAe,CAAEO,IAAI,IAAK,CAACA,IAAI,CAAC;EAClC,CAAC;EACD;EACA,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1BR,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC;EACD;EACA,MAAMS,WAAW,GAAIC,MAAM,IAAK;IAC9B,OAAOA,MAAM,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,KAAK;MAC/B,oBACErB,OAAA,CAACR,OAAO;QAAA8B,QAAA,eACNtB,OAAA,CAAC/B,OAAO;UACNsD,EAAE,EAAEH,IAAI,CAACI,MAAM,GAAGJ,IAAI,CAACK,IAAK;UAC5BC,GAAG,EAAExD,UAAW;UAChByD,OAAO,EAAEX,aAAc;UAAAM,QAAA,gBAEvBtB,OAAA;YAAG4B,SAAS,EAAER,IAAI,CAACS;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EAC1Bb,IAAI,CAACc,IAAI;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC,GAREZ,GAAG;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASR,CAAC;IAEd,CAAC,CAAC;EACJ,CAAC;EAED,MAAM;IAAEE,OAAO;IAAEjB,MAAM;IAAEkB;EAAK,CAAC,GAAG/B,KAAK;EACvC,IAAIgC,gBAAgB;EACpB,IAAID,IAAI,IAAIA,IAAI,CAACE,SAAS,EAAE;IAC1BD,gBAAgB,GAAG;MACjBd,EAAE,EAAEa,IAAI,CAACE,SAAS;MAClBZ,GAAG,EAAEvD;IACP,CAAC;EACH,CAAC,MAAM,IAAIiE,IAAI,IAAIA,IAAI,CAACG,UAAU,EAAE;IAClCF,gBAAgB,GAAG;MACjBG,IAAI,EAAEJ,IAAI,CAACG,UAAU;MACrBE,MAAM,EAAE;IACV,CAAC;EACH;EAEA,oBAEEzC,OAAA,CAAAE,SAAA,mBACE,CAAC;AAEP,CAAC;AAACI,EAAA,CAnDIF,OAAO;AAAAsC,EAAA,GAAPtC,OAAO;AAqDbA,OAAO,CAACuC,YAAY,GAAG;EACrBzB,MAAM,EAAE,CAAC,CAAC,CAAC;AACb,CAAC;AAEDd,OAAO,CAACwC,SAAS,GAAG;EAClB;EACA1B,MAAM,EAAE9C,SAAS,CAACyE,OAAO,CAACzE,SAAS,CAAC0E,MAAM,CAAC;EAC3CV,IAAI,EAAEhE,SAAS,CAAC2E,KAAK,CAAC;IACpB;IACA;IACAT,SAAS,EAAElE,SAAS,CAAC4E,MAAM;IAC3B;IACA;IACAT,UAAU,EAAEnE,SAAS,CAAC4E,MAAM;IAC5B;IACAC,MAAM,EAAE7E,SAAS,CAAC4E,MAAM,CAACE,UAAU;IACnC;IACAC,MAAM,EAAE/E,SAAS,CAAC4E,MAAM,CAACE;EAC3B,CAAC;AACH,CAAC;AAED,eAAe9C,OAAO;AAAC,IAAAsC,EAAA;AAAAU,YAAA,CAAAV,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}